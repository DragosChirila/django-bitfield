language: python
python:
- '2.7'
- '3.4'
- '3.5'
sudo: false
cache:
  directories:
  - node_modules
  - ".pip_download_cache"
  - "$HOME/virtualenv/python2.7.9"
env:
  matrix:
  - DB=postgres DJANGO="Django==1.4.22"
  - DB=sqlite DJANGO="Django==1.4.22"
  - DB=postgres DJANGO="Django==1.8.14"
  - DB=sqlite DJANGO="Django==1.8.14"
  - DB=postgres DJANGO="Django==1.9.9"
  - DB=sqlite DJANGO="Django==1.9.9"
  - DB=postgres DJANGO="Django==1.10"
  - DB=sqlite DJANGO="Django==1.10"
  - DB=postgres DJANGO="-e git+git://github.com/django/django.git#egg=Django"
  - DB=sqlite DJANGO="-e git+git://github.com/django/django.git#egg=Django"
  global:
  - PIP_DOWNLOAD_CACHE=".pip_download_cache"
matrix:
  allow_failures:
  - env: DB=postgres DJANGO="-e git+git://github.com/django/django.git#egg=Django"
  - env: DB=sqlite DJANGO="-e git+git://github.com/django/django.git#egg=Django"
before_script:
- if [[ $DB = "postgres" ]]; then psql -c 'create database bitfield;' -U postgres;
  fi
- if [[ $DB = "mysql" ]]; then mysql -e 'create database bitfield'; fi
install:
- pip install ${DJANGO}
- make
script:
- make lint
- make test
deploy:
  provider: pypi
  user: disqus
  password:
    secure: VMFRRlf1r/rIfHiKbPkKafCUCPMqUmwxKXS02COgj38354YiF5wK1IK89FBd+Jeuym3CL+ZXbsHpjGXV16XxGn3QWknlErLFtrkPykGceQczMYPUAaf4STH5/RMpllGZXzsrIu3miW/xa1fpMhZSdVFSPExgmDrVH0TVfO5m7rM=
  on:
    tags: true
